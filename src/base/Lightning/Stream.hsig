signature Lightning.Stream
  ( Stream
  , Token
  , Tokens
  , tokenToChunk
  , tokensToChunk
  , chunkToTokens
  , chunkLength
  , chunkEmpty
  , positionAt1
  , positionAtN
  , advance1
  , advanceN
  , take1_
  , takeN_
  , takeWhile_ )
where

import Control.DeepSeq (NFData)
import Data.Typeable (Typeable)
import Lightning.Error.Class
import Lightning.Pos

data Stream
instance Eq Stream
instance Ord Stream
instance Show Stream
instance NFData Stream

data Token
  deriving (Typeable)
instance Eq Token
instance Ord Token
instance Show Token
instance NFData Token
instance ShowToken Token

data Tokens
instance Eq Tokens
instance Ord Tokens
instance NFData Tokens

tokenToChunk :: Token -> Tokens

tokensToChunk :: [Token] -> Tokens

chunkToTokens :: Tokens -> [Token]

chunkLength :: Tokens -> Int

chunkEmpty :: Tokens -> Bool

positionAt1 :: SourcePos -> Token -> SourcePos

positionAtN :: SourcePos -> Tokens -> SourcePos

advance1 :: Pos -> SourcePos -> Token -> SourcePos

advanceN :: Pos -> SourcePos -> Tokens -> SourcePos

take1_ :: Stream -> Maybe (Token, Stream)

takeN_ :: Int -> Stream -> Maybe (Tokens, Stream)

takeWhile_ :: (Token -> Bool) -> Stream -> (Tokens, Stream)
