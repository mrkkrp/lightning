name:                 lightning
version:              0.0.1.0
cabal-version:        2.0
tested-with:          GHC==8.2.2, GHC==8.4.2
license:              BSD3
license-file:         LICENSE.md
author:               Mark Karpov <markkarpov92@gmail.com>
maintainer:           Mark Karpov <markkarpov92@gmail.com>
homepage:             https://github.com/mrkkrp/lightning
bug-reports:          https://github.com/mrkkrp/lightning/issues
category:             Parsing
synopsis:             Monadic parser combinators
build-type:           Simple
description:

  This is an industrial-strength monadic parser combinator library.
  Megaparsec is a feature-rich package that strikes a nice balance between
  speed, flexibility, and quality of parse errors.

extra-doc-files:      CHANGELOG.md
                    , README.md

source-repository head
  type:               git
  location:           https://github.com/mrkkrp/lightning.git

flag dev
  description:        Turn on development settings.
  manual:             True
  default:            False

library
  hs-source-dirs:     src/base
  build-depends:      base             >= 4.10 && < 5.0
                    , containers       >= 0.5  && < 0.6
                    , deepseq          >= 1.3  && < 1.5
                    , parser-combinators >= 0.4 && < 2.0
  signatures:         Lightning.Error.Custom
                    , Lightning.State.Custom
                    , Lightning.Stream
  exposed-modules:    Lightning
                    -- , Lightning.Debug
                    , Lightning.Error
                    , Lightning.Error.Util
                    -- , Lightning.Error.Builder
                    , Lightning.Internal
                    -- , Lightning.Lexer
  other-modules:      Lightning.Pos
                    , Lightning.State
  if flag(dev)
    ghc-options:      -Wall -Werror -Wcompat
                      -Wincomplete-record-updates
                      -Wincomplete-uni-patterns
                      -Wnoncanonical-monad-instances
                      -Wnoncanonical-monadfail-instances
  else
    ghc-options:      -O2 -Wall
  default-language:   Haskell2010

-- library lightning-void
--   hs-source-dirs:     src/void
--   build-depends:      base             >= 4.10 && < 5.0
--   exposed-modules:    Lightning.Error.Custom
--                     , Lightning.State.Custom
--   if flag(dev)
--     ghc-options:      -Wall -Werror -Wcompat
--                       -Wincomplete-record-updates
--                       -Wincomplete-uni-patterns
--                       -Wnoncanonical-monad-instances
--                       -Wnoncanonical-monadfail-instances
--   else
--     ghc-options:      -O2 -Wall
--   default-language:   Haskell2010

-- library lightning-text
--   hs-source-dirs:     src/text
--   build-depends:      base             >= 4.10 && < 5.0
--   exposed-modules:    Lightning.Steam
--   if flag(dev)
--     ghc-options:      -Wall -Werror -Wcompat
--                       -Wincomplete-record-updates
--                       -Wincomplete-uni-patterns
--                       -Wnoncanonical-monad-instances
--                       -Wnoncanonical-monadfail-instances
--   else
--     ghc-options:      -O2 -Wall
--   default-language:   Haskell2010
